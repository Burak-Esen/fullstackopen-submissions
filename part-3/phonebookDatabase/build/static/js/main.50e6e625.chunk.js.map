{"version":3,"sources":["services/peopleService.js","Components/PersonForm.js","Components/Filter.js","Components/Persons.js","Components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newPerson","post","id","newObject","put","delete","PersonForm","props","onSubmit","event","preventDefault","persons","every","person","name","newName","personObj","number","newNumber","length","peopleService","then","setPersons","concat","setNewName","setNewNumber","notif","catch","error","response","data","window","confirm","Object","assign","find","a","onChange","target","value","type","Filter","setFilt","toLowerCase","Persons","delHandler","e","getAttribute","people","filter","p","delFromState","delFromDb","includes","filt","map","key","onClick","val","Notification","notificationMessage","className","isError","App","useState","setNotificationMessage","setIsError","msg","setTimeout","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50e6e625.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/people'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newPerson =>{\r\n  return axios.post(baseUrl, newPerson)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst del = id =>{\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\nexport default { getAll, create, update, del }","import React from 'react'\r\nimport peopleService from '../services/peopleService'\r\n\r\nconst PersonForm = (props) => {\r\n  const addHandler = (event) => {\r\n    event.preventDefault()\r\n    if (props.persons.every(person => person.name !== props.newName)) {\r\n      let personObj = {}\r\n      personObj.name = props.newName\r\n      personObj.number = props.newNumber\r\n      personObj.id = props.persons.length + 1\r\n      peopleService.create(personObj)\r\n      .then(()=>{\r\n        props.setPersons(props.persons.concat(personObj))\r\n        props.setNewName(\"\")\r\n        props.setNewNumber(\"\")\r\n        props.notif(`${personObj.name} is created`)\r\n      })\r\n      .catch(error=>{\r\n        //console.log(error)\r\n        props.notif(error.response.data['error'], true)\r\n      })\r\n      \r\n    } else if (window.confirm(`${props.newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n      let person = Object.assign({},props.persons.find(a => a.name === props.newName))\r\n      person.number = props.newNumber\r\n      peopleService.update(person.id, person)\r\n      .then(()=>{\r\n        let person = props.persons.find(a => a.name === props.newName)\r\n        person.number = props.newNumber\r\n        props.setPersons(props.persons.concat([]))\r\n        props.notif(`${person.name} is updated`)\r\n      })\r\n      .catch(error=>{\r\n        props.notif(error.response.data['error'], true)\r\n      })\r\n      props.setNewName(\"\")\r\n      props.setNewNumber(\"\")\r\n    }\r\n  }\r\n\r\n  const newNameOnCh = (event) => {\r\n    props.setNewName(event.target.value)\r\n  }\r\n  const newNumberOnCh = (event) => {\r\n    props.setNewNumber(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addHandler}>\r\n      <div>\r\n        name__: <input onChange={newNameOnCh} value={props.newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={newNumberOnCh} value={props.newNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" >add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  const filterResultOnCh = event =>{\r\n    props.setFilt(event.target.value.toLowerCase())\r\n  }\r\n  return (\r\n    <div>\r\n      filter shown with <input onChange={filterResultOnCh}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\nimport peopleService from '../services/peopleService'\r\n\r\nconst Persons = (props) => {\r\n  //console.log(props.persons)\r\n  const delFromState = (id) => {\r\n    const people = props.persons.filter(p=>p.id!==id)\r\n    props.setPersons(people)\r\n  }\r\n  const delFromDb = id => peopleService.del(id)\r\n  \r\n  const delHandler = e => {\r\n    const name = e.target.getAttribute(\"name\")\r\n    const id = e.target.getAttribute(\"val\")\r\n    //console.log(id)\r\n    if (window.confirm(\"Delete \" + name + \" ?\")) {\r\n      delFromState(id)\r\n      delFromDb(id)\r\n      props.notif(`${name} is deleted`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.persons.filter(person => person.name.toLowerCase().includes(props.filt)).map(person =>\r\n        <p key={person.name}>\r\n          <span >{person.name} {person.number}</span>\r\n          <button onClick={delHandler}  val={person.id} name={person.name}>delete</button>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n\r\n  if(props.notificationMessage===null){\r\n    return null\r\n  }\r\n  return (\r\n    <div className={props.isError ? \"notification notification--error\" : \"notification\"}>\r\n      {props.notificationMessage}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './Components/PersonForm'\r\nimport Filter from \"./Components/Filter\"\r\nimport Persons from \"./Components/Persons\"\r\nimport peopleService from './services/peopleService'\r\nimport Notification from './Components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filt , setFilt ] = useState('')\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n  const [ isError, setIsError ]=useState(false)\r\n  const notif = (msg, isError=false) =>{\r\n    setNotificationMessage(msg)\r\n    setIsError(isError)\r\n    setTimeout(()=>setNotificationMessage(null),3000)\r\n    setTimeout(()=>setIsError(false),3000)\r\n  }\r\n  useEffect(()=>{\r\n    peopleService.getAll().then(response=>{\r\n    setPersons(response.data)\r\n    })\r\n  },[])\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter setFilt={setFilt}/>\r\n\r\n      <h2>add a new</h2>\r\n      <Notification notificationMessage={notificationMessage} isError={isError} />\r\n      <PersonForm \r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        newName={newName}\r\n        setNewName={setNewName}\r\n        newNumber={newNumber}\r\n        setNewNumber={setNewNumber}\r\n        notif={notif}/>\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        notif={notif}\r\n        filt={filt}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}